class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        vector<int> ans;
        unordered_map<int,int> mpp;
        for(auto it:nums) mpp[it]++;
        priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>> pq;
        for(auto it:mpp)
        {
            pq.push({it.second, it.first});
            while(pq.size()>k)
            {
                pq.pop();
            }
        }
        
        while(!pq.empty())
        {
            auto it = pq.top();
            pq.pop();
            int ele = it.second;
            ans.push_back(ele);
        }
        return ans;
    }
};
