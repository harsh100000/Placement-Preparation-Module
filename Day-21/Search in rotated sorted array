class Solution {
public:
    bool search(vector<int>& nums, int target) {
        int n = nums.size();
        if(n==1)
        {
            if(target==nums[0]) return true;
            else return false;
        }
        int low=0, high = n-1;
        while(low<=high)
        {
            int mid = (low+high)/2;
            if(nums[mid]==target) return true;
            
            // special condition
            if(nums[mid]==nums[low] and nums[mid]==nums[high])
            {
                low++;
                high--;
            }
            
            else if(nums[mid]>=nums[low])
            {
                // left half sorted
                if(target>=nums[low] and target<=nums[mid])
                {
                    high = mid-1;
                }
                else
                {
                    low = mid+1;
                }
            }
            else
            {
                // right half sorted
                if(target>=nums[mid] and target<=nums[high])
                {
                    low=mid+1;
                }
                else
                {
                    high = mid-1;
                }
            }
        }
        return false;
    }
};
