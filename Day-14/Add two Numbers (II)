class Solution {
public:
    
    ListNode* solve(ListNode* head)
    {
        if(head==NULL) return NULL;
        if(head->next==NULL) return head;
        ListNode* curr = head;
        ListNode* prev = NULL;
        ListNode* nxt = NULL;
        while(curr!=NULL)
        {
            nxt = curr->next;
            curr->next = prev;
            prev = curr;
            curr = nxt;
        }
        return prev;
    }
    
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* dummy = new ListNode();
        ListNode* ptr = dummy;
        ListNode* head1 = solve(l1);
        ListNode* head2 = solve(l2);
        ListNode* ptr1 = head1;
        ListNode* ptr2 = head2;
        int carry = 0;
        while(ptr1!=NULL or ptr2!=NULL or carry)
        {
            int sum = 0;
            if(ptr1!=NULL)
            {
                sum += ptr1->val;
                ptr1 = ptr1->next;
            }
            if(ptr2!=NULL)
            {
                sum += ptr2->val;
                ptr2 = ptr2->next;
            }
            sum+=carry;
            carry = sum/10;
            ListNode* newNode = new ListNode(sum%10);
            ptr->next = newNode;
            ptr=ptr->next;
        }
        return solve(dummy->next);
    }
};
